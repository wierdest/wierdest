#!/usr/bin/env node

// esse arquivo é gerado automaticamente, modifiquei para incluir o server side websocket aqui
// de primeira fiz no app.js, mas passei para cá pq no app.js vc quer deixar o Middleware
const app = require('../app');
const debug = require('debug')('wierdest:server');
const http = require('http');
const { WebSocketServer } = require('ws');
const uuid = require('uuid');

// Create HTTP server
const server = http.createServer(app);

// Create the WebSocket server
const wss = new WebSocketServer({ noServer: true });

server.on('upgrade', function(request, socket, head) {
  wss.handleUpgrade(request, socket, head, function(ws) {
    const userId = uuid.v4();
    ws.userId = userId;

    console.log('User connected with ID ', userId);

    wss.emit('connection', ws, request);
  });
});

wss.on('connection', function(ws) {
  ws.send(JSON.stringify({ type: 'init', userId: ws.userId }));
  ws.on('message', function(message) {
    console.log(`Received message ${message} from user ${ws.userId}`);
  });

  ws.on('close', function() {
    console.log(`User ${ws.userId} disconnected`);
  });
});

// Start the server
server.listen(process.env.PORT || 3000, () => {
  console.log(`Server running on http://localhost:${server.address().port}`);
});

debug('Server is configured');
